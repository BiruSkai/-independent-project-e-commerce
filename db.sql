-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.category
(
    id bigint NOT NULL DEFAULT nextval('category_id_seq'::regclass),
    name character varying COLLATE pg_catalog."default",
    parent_id integer,
    CONSTRAINT category_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.country
(
    code character varying(3) COLLATE pg_catalog."default" NOT NULL,
    name character varying COLLATE pg_catalog."default",
    CONSTRAINT country_pkey PRIMARY KEY (code)
);

CREATE TABLE IF NOT EXISTS public.history
(
    user_id integer NOT NULL,
    order_id integer NOT NULL,
    created_on timestamp without time zone,
    payment character varying COLLATE pg_catalog."default" NOT NULL DEFAULT 'successful'::character varying,
    CONSTRAINT history_pkey PRIMARY KEY (user_id, order_id)
);

CREATE TABLE IF NOT EXISTS public.merchant
(
    id bigint NOT NULL DEFAULT nextval('merchant_id_seq'::regclass),
    admin_id integer,
    name character varying COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    created_at timestamp without time zone,
    CONSTRAINT merchant_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.order_item
(
    id bigint NOT NULL DEFAULT nextval('order_id_seq'::regclass),
    user_id integer,
    created_on timestamp without time zone,
    CONSTRAINT order_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.order_item_product
(
    order_id integer,
    product_id integer,
    quantity integer,
    payment_id integer,
    status order_status,
    price_per_unit numeric,
    total_cost numeric
);

CREATE TABLE IF NOT EXISTS public.payment
(
    id bigint NOT NULL DEFAULT nextval('payment_id_seq'::regclass),
    method option,
    CONSTRAINT payment_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.product
(
    id bigint NOT NULL DEFAULT nextval('product_id_seq'::regclass),
    category_id integer,
    merchant_id integer,
    name character varying COLLATE pg_catalog."default",
    unit_available integer,
    created_at timestamp without time zone,
    price numeric,
    CONSTRAINT product_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_address
(
    id bigint NOT NULL DEFAULT nextval('user_address_id_seq'::regclass),
    user_id integer,
    street_name character varying COLLATE pg_catalog."default",
    street_number integer,
    postcode integer,
    city character varying COLLATE pg_catalog."default",
    province character varying COLLATE pg_catalog."default",
    country_code character varying COLLATE pg_catalog."default",
    CONSTRAINT user_address_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_data
(
    id bigint NOT NULL DEFAULT nextval('user_id_seq'::regclass),
    title character varying COLLATE pg_catalog."default",
    fullname character varying COLLATE pg_catalog."default" NOT NULL,
    gender gender_type NOT NULL,
    birth_date date,
    email character varying COLLATE pg_catalog."default",
    telephone integer NOT NULL,
    user_type user_type NOT NULL,
    created_at timestamp without time zone NOT NULL,
    CONSTRAINT user_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.category
    ADD CONSTRAINT category_parent_id_fkey FOREIGN KEY (parent_id)
    REFERENCES public.category (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.history
    ADD CONSTRAINT history_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES public.order_item (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.history
    ADD CONSTRAINT history_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.user_data (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.merchant
    ADD CONSTRAINT merchant_admin_id_fkey FOREIGN KEY (admin_id)
    REFERENCES public.user_data (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.order_item
    ADD CONSTRAINT order_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.user_data (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.order_item_product
    ADD CONSTRAINT order_item_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES public.order_item (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.order_item_product
    ADD CONSTRAINT order_item_payment_id_fkey FOREIGN KEY (payment_id)
    REFERENCES public.payment (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.order_item_product
    ADD CONSTRAINT order_item_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product
    ADD CONSTRAINT product_category_id_fkey FOREIGN KEY (category_id)
    REFERENCES public.category (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product
    ADD CONSTRAINT product_merchant_id_fkey FOREIGN KEY (merchant_id)
    REFERENCES public.merchant (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_address
    ADD CONSTRAINT user_address_country_code_fkey FOREIGN KEY (country_code)
    REFERENCES public.country (code) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_address
    ADD CONSTRAINT user_address_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.user_data (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;